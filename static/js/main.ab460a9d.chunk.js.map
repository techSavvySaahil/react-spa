{"version":3,"sources":["scripts/home.js","scripts/login.js","scripts/about.js","scripts/App.js","serviceWorker.js","index.js"],"names":["Home","react_default","a","createElement","Component","LoginModal","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","login","changeView","setState","renderLogin","className","onClick","placeholder","aria-hidden","renderSignup","Contact","App","HashRouter","NavLink","exact","to","Route","path","component","Login","About","Boolean","window","location","hostname","match","ReactDOM","render","scripts_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ab460a9d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Home extends Component {\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<div>This is Home page</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport '../styles/vendors/font-awesome/css/font-awesome.min.css'\r\n\r\nclass LoginModal extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tlogin: true\r\n\t\t};\r\n\t\tthis.changeView = (login) => {\r\n\t\t\tthis.setState({login});\r\n\t\t}\r\n\t\tthis.renderLogin = ()=> {\r\n\t\t\treturn(\r\n\t\t\t\t<div className=\"login-wrap\">\r\n\t\t\t\t\t<div className=\"login-tabs\">\r\n\t\t\t\t\t\t<div className=\"active-tab\">Login</div>\r\n\t\t\t\t\t\t<div onClick={()=>{this.changeView(false)}}>Sign Up</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"user-info\">\r\n\t\t\t\t\t\t<input placeholder=\"Email\" /><br />\r\n\t\t\t\t\t\t<input placeholder=\"Password\" /><br />\r\n\t\t\t\t\t\t<button>Login</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"user-sso\">\r\n\t\t\t\t\t\t<div>Continue with</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<i className=\"fa fa-facebook fb\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t<i className=\"fa fa-linkedin-square linkedin\"></i>\r\n\t\t\t\t\t\t\t<i className=\"fa fa-google-plus google-p\"></i>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"change-view\">Don't have an account? <a onClick={()=>{this.changeView(false)}}>Sign Up</a></div>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t};\r\n\t\tthis.renderSignup = ()=> {\r\n\t\t\treturn(\r\n\t\t\t\t<div className=\"login-wrap\">\r\n\t\t\t\t\t<div className=\"login-tabs\">\r\n\t\t\t\t\t\t<div onClick={()=>{this.changeView(true)}}>Login</div>\r\n\t\t\t\t\t\t<div className=\"active-tab\">Sign Up</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"user-info\">\r\n\t\t\t\t\t\t<input placeholder=\"Name\" /><br />\r\n\t\t\t\t\t\t<input placeholder=\"Password\" /><br />\r\n\t\t\t\t\t\t<input placeholder=\"Confirm Password\" /><br />\r\n\t\t\t\t\t\t<input placeholder=\"Email\" /><br />\r\n\t\t\t\t\t\t<button>Sign up</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"user-sso\">\r\n\t\t\t\t\t\t<div>Continue with</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<i className=\"fa fa-facebook fb\" aria-hidden=\"true\"></i>\r\n\t\t\t\t\t\t\t<i className=\"fa fa-linkedin-square linkedin\"></i>\r\n\t\t\t\t\t\t\t<i className=\"fa fa-google-plus google-p\"></i>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"change-view\">Already have an account? <a onClick={()=>{this.changeView(true)}}>Login</a></div>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\trender() {\r\n\t\tif(this.state.login) {\r\n\t\t\treturn this.renderLogin();\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this.renderSignup();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default LoginModal;","import React, { Component } from 'react';\r\n\r\nclass Contact extends Component {\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<div>This is Contact page</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport '../styles/App.css';\r\nimport {\r\n  Route,\r\n  NavLink,\r\n  HashRouter\r\n} from \"react-router-dom\";\r\nimport Home from \"./home\";\r\nimport Login from \"./login\";\r\nimport About from \"./about\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <HashRouter>\r\n      <div className=\"App\">\r\n        <ul className=\"links\">\r\n          <div className=\"project\">Project X</div>\r\n          <div><NavLink exact to=\"/\">Home</NavLink></div>\r\n          <div><NavLink to=\"/about\">About</NavLink></div>\r\n          <div><NavLink to=\"/login\">Login</NavLink></div>\r\n        </ul>\r\n        <div className=\"content\">\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route path=\"/login\" component={Login} />\r\n          <Route path=\"/about\" component={About} />\r\n        </div>\r\n      </div>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport App from './scripts/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}